<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Alnoor Pirani]]></title>
  <link href="http://alnoorp.github.io/atom.xml" rel="self"/>
  <link href="http://alnoorp.github.io/"/>
  <updated>2013-11-25T11:10:36-05:00</updated>
  <id>http://alnoorp.github.io/</id>
  <author>
    <name><![CDATA[Alnoor Pirani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[5 Ways I Prepared for an Immersive Web Developer Program]]></title>
    <link href="http://alnoorp.github.io/blog/2013/11/20/5-ways-i-prepared-for-an-immersive-web-developer-program/"/>
    <updated>2013-11-20T17:51:30-05:00</updated>
    <id>http://alnoorp.github.io/blog/2013/11/20/5-ways-i-prepared-for-an-immersive-web-developer-program</id>
    <content type="html"><![CDATA[<p>Tomorrow I will be starting the next phase of <a href="http://www.launchacademy.com" title="Launch Academy">Launch Academy</a>, the part where I get to meet the other students and experience engineers in person and start working and learning in teams. This is my last day of working independently and I wanted to take a moment to reflect on how I got to this point with some thoughts about what lies ahead. I&rsquo;ve spent a great deal of time learning about web development on my own and preparing myself for this program and I&rsquo;m looking forward to finally getting to work with and learn from others who are going through the same journey of reinventing themselves.</p>

<h3>Independent Study</h3>

<p>Up until now, the majority of my training in web technologies has been through independent study. I&rsquo;ve accessed a variety of resources online resources to learn about HTML, CSS, PHP, WordPress and JavaScript. Some of my favorite sites are listed below:</p>

<ul>
<li>  <a href="http://teamtreehouse.com" title="Treehouse">Treehouse</a> - Their quirky instructors and videos make learning fun</li>
<li>  <a href="http://www.w3schools.com/" title="W3 Schools">W3 Schools</a> &ndash; A great reference to help you brush up details</li>
<li>  <a href="http://www.codecademy.com/" title="Codecademy">Codecademy</a> &ndash; Learning by doing done right</li>
<li>  <a href="http://stackoverflow.com/" title="Stack Overflow">Stack Overflow</a> &ndash; Awesome community of helpers to get you unstuck</li>
</ul>


<p>As a beginner, learning independently has been great. I was able to follow the coursework at my own pace in the privacy of my own home and on my own time. I had the freedom to learn what I want to learn and choose the resources I wanted to use based on my learning style. But to take it to the next level I will have work with others and hopefully jumpstart my learning with practical experience.</p>

<h3>Working on Pet Projects</h3>

<p>Independent study provided me with the background and theoretical knowledge to code. But to really solidify what I had learned it was important that I use my new skills to actually create something. This is the scary part because it exposes you to potential criticism and the risk of failure and being seen as a fraud. <a title="Seth Godin" href="http://sethgodin.com" target="_blank">Seth Godin</a> is well-known for his essays about the lizard brain and the natural human tendency to avoid this kind of risk. But pushing past that fear is crucial for creative types and those who want to change the world. Working on the web gives you a degree of anonymity that&rsquo;s not possible in other media, which I think makes it easier to make that leap and create something risky.</p>

<p>My first pet project was a photo blog that I created in 2004 while I was in graduate school. I needed an outlet to express my creativity and share my photography with the world before photo sharing on the web became so common through Instagram and other social media sites. I built the site using a CMS called <a title="TypePad" href="http://www.typepad.com/" target="_blank">TypePad</a> and learned a great deal about CSS and separating style from structure.</p>

<p>Earlier this year, Treehouse held a web design competition that I decided to enter as a way to push myself to create a site from scratch and practice my new skills. It had been a long time since I had done any web coding and I was eager to get back into it. The theme for the contest was Spring/Easter and they asked that all entries relate to this theme. I created a very simple egg hunting game and created all the graphics from scratch. Check out <a title="Alnoor's Egg Hunt" href="http://th.alnoorpirani.com/spring/" target="_blank">Alnoor&rsquo;s Egg Hunt</a> if you&rsquo;re curious. I didn&rsquo;t win anything but had a lot of fun making the site and dealing with all the little challenges that come with creating a site for modern browsers that&rsquo;s also works on a mobile device.</p>

<p>This year I also launched a site called <a title="Liftagram" href="http://liftagram.com" target="_blank">liftagram.com</a>, an Instagram web viewer for the bodybuilding and fitness community. I had spent a lot of time on Instagram and discovered a niche community of people using Instagram to track their fitness journey. I wanted to create a site that would help connect this community and facilitate discovery of other users and brands in the fit lifestyle space. I hired a local web development company to create the site for me. However, I had creative control of the site and have since taken over development and maintenance,  and continue to make additions. It was this experience of working with a web development team on my own project that solidified my interest in pursuing web development as a profession.</p>

<h3>Internship at Local Web Development Shop</h3>

<p>The pet projects taught me a ton about web development but the next natural step was to see if I could work for someone else and add value to client projects as opposed to my own work. I knew I had the skills to make a contribution but still had a lot to learn. That&rsquo;s when I decided that it was the perfect time to seek out an internship.</p>

<p>I was lucky to find a great opportunity at a local web development firm specializing in creating WordPress sites for Boston area businesses. My job involved making edits to existing sites (both content and code) based on client needs during the website life cycle. Most of the time I was reading and editing someone else&rsquo;s code, an important skill for any software developer since most of the time you are expanding on or cleaning up existing work rather than creating something from scratch. This experience also gave me a taste of what it&rsquo;s like working with others in a software development environment.</p>

<h3>Reading about Coding, Productivity and Brain Science</h3>

<p>Part of the core curriculum at Launch Academy involved reading various books related to coding but also to how the brain works in the social/working world and how people learn. Although coding is largely an individual activity, software developers generally work in teams and learning how to effectively work with others is crucial to a successful career in software development. The following is a list of books that I read over the past few months to prepare myself:</p>

<ul>
  <li><a title="Getting Things Done" href="http://www.amazon.com/Getting-Things-Done-Stress-Free-Productivity/dp/0142000280" target="_blank">Getting Things Done</a> by David Allen</li>
  <li><a title="The Well Grounded Rubyist" href="http://www.amazon.com/The-Well-Grounded-Rubyist-David-Black/dp/1933988657" target="_blank">The Well Grounded Rubyist</a> by David Black</li>
  <li><a title="Beginning Database Design: From Novice to Professional" href="http://www.amazon.com/Beginning-Database-Design-Novice-Professional/dp/1590597699" target="_blank">Beginning Database Design: From Novice to Professional</a> by Clare Churcher</li>
  <li><a title="Pragmatic Thinking and Learning: Refactor Your Wetware" href="http://www.amazon.com/Pragmatic-Thinking-Learning-Refactor-Programmers/dp/1934356050" target="_blank">Pragmatic Thinking and Learning: Refactor Your Wetware</a> by Dan Pickett</li>
  <li><a title="Learn to Program, Second Edition (The Facets of Ruby Series)" href="http://www.amazon.com/Program-Second-Edition-Facets-Series/dp/1934356360" target="_blank">Learn to Program, Second Edition (The Facets of Ruby Series)</a> by Chris Pine</li>
  <li><a title="Your Brain at Work: Strategies for Overcoming Distraction, Regaining Focus, and Working Smarter All Day Long" href="http://www.amazon.com/Your-Brain-Work-Strategies-Distraction/dp/0061771295" target="_blank">Your Brain at Work: Strategies for Overcoming Distraction, Regaining Focus, and Working Smarter All Day Long</a> by David Rock</li>
</ul>


<p>I particularly enjoyed the books about brain science because they offered a glimpse into how my own brain works resulting in many &ldquo;Aha!&rdquo; moments where I recognized my own thought patterns being described. It turns out that knowing oneself brings you a lot closer to knowing others (a fact borne out by science even though it makes intuitive sense).</p>

<h3>Falling in Love with Caffeine</h3>

<p>Before a few months ago I rarely drank caffeinated drinks. Although I enjoyed the taste of tea and coffee I never developed a habit of drinking tea or coffee since it seemed to have inconsistent effects on me and I was afraid of becoming addicted to it.</p>

<p>A few months ago I finally decided to do something about my sleepiness during work. I&rsquo;m not a morning person and it looked like I needed something to help me make it through the day without falling asleep at my desk. So I decided to experiment with caffeine to see if it would help me. To put it simply, I was shocked. I never realized how much caffeine can help when dosed correctly and used at the appropriate times. <span style="line-height: 1.5;">It turns out that numerous studies have been conducted on caffeine and it&rsquo;s performance enhancing effects and I had been missing out all these years.</span></p>

<p>My caffeinated beverage of choice is green tea (<a title="Peet's" href="http://www.peets.com/" target="_blank">Peet&rsquo;s</a> has a great selection of loose leaf varieties) but I also enjoy white tea and on occasion a full bodied medium roast like at Starbucks really does the trick.</p>

<h3>Wrap Up</h3>

<p>If pressed to quantify how long I&rsquo;ve been preparing for an immersive web development program I&rsquo;d have to say about a decade. Of course I&rsquo;ve only been doing it consistently over the past year or so but my forays began then. I&rsquo;ve never lost interest, just had to focus on different priorities.</p>

<p>I&rsquo;ve decided that a career in web development is for me and decided to devote all my energy into pursuing it. I&rsquo;m excited to start the next chapter and learn with and from others that are doing the same thing.</p>

<p>Are you preparing for an immersive developer program? What are some things you did to prepare yourself?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Decomposition in Software Development and in Life]]></title>
    <link href="http://alnoorp.github.io/blog/2013/11/20/decomposition-in-software-development-and-in-life/"/>
    <updated>2013-11-20T17:32:12-05:00</updated>
    <id>http://alnoorp.github.io/blog/2013/11/20/decomposition-in-software-development-and-in-life</id>
    <content type="html"><![CDATA[<p>I just completed my first week at <a href="http://www.launchacademy.com/" title="Launch Academy">Launch Academy</a> and it&rsquo;s already been a transformative experience. One of my biggest takeaways from this past week is that software development is more about the human brain and its capacity to solve problems than it is about machines.</p>

<p>Developers have an acronym to describe this phenomenon: <a href="http://en.wikipedia.org/wiki/User_error" title="User Error">PEBKAC</a> (Problem Exists Between Keyboard and Chair). Turns out we as software developers are the biggest problem facing software development!</p>

<p>The answer to why we are often the cause of our own coding problems is pretty obvious, we don&rsquo;t think like computers. More precisely, we have trouble communicating our needs in sufficient detail and granularity. But how do we more effectively communicate with computers without going crazy?</p>

<p>A universal technique used in problem solving is to break the problem into smaller parts. When you break down a problem, you can more easily focus on the details within each sub-problem and uncover other problems you may have overlooked. The human brain has a better chance at fixing issues when it&rsquo;s given a smaller problem to fix. And smaller problems involve smaller blocks of code and a better chance of being bug-free. Win-win.</p>

<p>Software developers have been breaking down problems from the beginning, but this way of thinking continues to influence new movements in the industry because of it&rsquo;s universality and effectiveness. For example <a href="http://en.wikipedia.org/wiki/Test-driven_development" title="Test-Driven Development">Test-Driven Development</a> is all about testing smaller portions of software continuously during the development process as opposed to waiting until the end. In addition, Source Control Management best practices recommend <a href="http://effectiveprogrammer.com/tip/35/make-atomic-commits" title="Make Atomic Commits">&ldquo;atomic commits&rdquo;</a> or single logical changes to make it easier to revert individual elements and reject others.</p>

<p>For a budding software developer (or anyone learning a new skill) decomposition is an important tool as well. As beginners it&rsquo;s easy to get overwhelmed by the vast body of knowledge to process. As creators, it&rsquo;s also overwhelming to look at a project and not even know where to begin. It&rsquo;s validating to know that the same principles of breaking down problems into smaller and more manageable pieces has a universal truth. The old adage, &ldquo;Take life one day at a time&rdquo; has new meaning for me this week.</p>
]]></content>
  </entry>
  
</feed>
